/*
BrushDiffuse_vp.glsl - draw world and brushmodels
Copyright (C) 2014 Uncle Mike

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
*/

attribute vec3		attr_Position;
attribute vec2		attr_TexCoord0;
attribute vec2		attr_TexCoord1;
attribute vec3		attr_Normal;
attribute vec3		attr_Tangent;
attribute vec3		attr_Binormal;

uniform mat4		u_WorldViewProjectionMatrix;
uniform vec2		u_DetailScale;
uniform int		u_FaceFlags;
uniform vec3		u_ViewOrigin;	// already in modelspace

varying vec2		var_TexDiffuse;
varying vec2		var_TexLight;
varying vec2		var_TexDetail;
varying vec3		var_ViewDir;

void main( void )
{
	gl_Position = u_WorldViewProjectionMatrix * vec4( attr_Position, 1.0 );

	// used for diffuse, normalmap, specular and height map
	var_TexDiffuse = attr_TexCoord0;

	// used for baselight, addlight and lightvecs map
	var_TexLight = attr_TexCoord1;

	// used for detail map (127-based)
	var_TexDetail = attr_TexCoord0 * u_DetailScale;	// user-defined scale

	// compute object-space view direction
	vec3 eye = normalize( u_ViewOrigin - attr_Position );

	// transform viewdir into tangent space
	var_ViewDir = vec3( dot( eye, attr_Tangent ), dot( eye, attr_Binormal ), dot( eye, attr_Normal ));
}