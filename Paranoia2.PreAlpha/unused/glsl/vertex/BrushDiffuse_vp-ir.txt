attribute vec3 attr_Position;
attribute vec2 attr_TexCoord0;
attribute vec2 attr_TexCoord1;
attribute vec3 attr_Normal;
attribute vec3 attr_Tangent;
attribute vec3 attr_Binormal;
uniform mat4 u_WorldViewProjectionMatrix;
uniform vec2 u_DetailScale;
uniform int u_FaceFlags;
uniform vec3 u_ViewOrigin;
varying vec2 var_TexDiffuse;
varying vec2 var_TexLight;
varying vec2 var_TexDetail;
varying vec3 var_ViewDir;
void main ()
{
  vec3 eye_1;
  vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = attr_Position.xyz;
  vec4 tmpvar_3;
  tmpvar_3 = (u_WorldViewProjectionMatrix * tmpvar_2);
  gl_Position = tmpvar_3;
  vec2 tmpvar_4;
  tmpvar_4 = attr_TexCoord0;
  var_TexDiffuse = tmpvar_4;
  vec2 tmpvar_5;
  tmpvar_5 = attr_TexCoord1;
  var_TexLight = tmpvar_5;
  vec2 tmpvar_6;
  tmpvar_6 = (attr_TexCoord0 * u_DetailScale);
  var_TexDetail = tmpvar_6;
  vec3 tmpvar_7;
  tmpvar_7 = normalize ((u_ViewOrigin - attr_Position));
  vec3 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  eye_1 = tmpvar_8;
  float tmpvar_9;
  tmpvar_9 = dot (eye_1, attr_Tangent);
  float tmpvar_10;
  tmpvar_10 = dot (eye_1, attr_Binormal);
  float tmpvar_11;
  tmpvar_11 = dot (eye_1, attr_Normal);
  vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_9;
  tmpvar_12.y = tmpvar_10;
  tmpvar_12.z = tmpvar_11;
  vec3 tmpvar_13;
  tmpvar_13 = tmpvar_12;
  var_ViewDir = tmpvar_13;
}

