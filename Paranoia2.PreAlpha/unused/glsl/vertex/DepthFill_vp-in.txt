/*
DepthFill_vp.glsl - shadowpass shader
Copyright (C) 2014 Uncle Mike

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
*/

#define STUDIO_NF_FLATSHADE		1
#define STUDIO_NF_CHROME		2
#define STUDIO_NF_FULLBRIGHT		4
#define STUDIO_NF_COLORMAP		8	// can changed by colormap command
#define STUDIO_NF_BLENDED		16	// rendering as semiblended
#define STUDIO_NF_ADDITIVE		32	// rendering with additive mode
#define STUDIO_NF_TRANSPARENT		64	// use texture with alpha channel

#define MAXSTUDIOBONES		128

attribute vec3		attr_Position;
attribute vec2		attr_TexCoord0;
attribute float		attr_BoneIndexes;

uniform mat4		u_WorldViewProjectionMatrix;
uniform mat4		u_BoneMatrix[MAXSTUDIOBONES];
uniform int		u_StudioModel;	// brushes and studiomodels

varying vec2		var_TexCoord;	// for alpha-testing

void main( void )
{
	vec4 position = vec4( 0.0, 0.0, 0.0, 1.0 );

	if( bool( u_StudioModel ))
	{
		// compute hardware skinning
		mat4 boneMatrix = u_BoneMatrix[int(attr_BoneIndexes)];
		position.xyz = ( boneMatrix * vec4( attr_Position, 1.0 )).xyz;
	}
	else
	{
		position.xyz = attr_Position;
	}

	// transform vertex position into homogenous clip-space
	gl_Position = u_WorldViewProjectionMatrix * position;

	var_TexCoord = attr_TexCoord0;
}