#version 130
in vec3 attr_Position;
in vec3 attr_Normal;
in float attr_BoneIndexes;
in vec2 attr_TexCoord0;
uniform int u_PointLight;
uniform vec3 u_LightDir;
uniform vec3 u_LightOrigin;
uniform vec3 u_ViewOrigin;
uniform vec3 u_ViewRight;
uniform int u_FaceFlags;
uniform mat4 u_WorldViewProjectionMatrix;
uniform mat4 u_BoneMatrix[128];
out vec2 var_TexCoord;
out float var_LightCos;
out vec4 var_ProjCoord[3];
void main ()
{
  vec3 vec_LightDir_1;
  vec3 vec_Normal_2;
  mat4 boneMatrix_3;
  vec4 position_4;
  vec4 tmpvar_5;
  tmpvar_5 = vec4(0.0, 0.0, 0.0, 1.0);
  position_4 = tmpvar_5;
  mat4 tmpvar_6;
  tmpvar_6 = u_BoneMatrix[int(attr_BoneIndexes)];
  boneMatrix_3 = tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = attr_Position.xyz;
  vec3 tmpvar_8;
  tmpvar_8 = (boneMatrix_3 * tmpvar_7).xyz;
  position_4.xyz = tmpvar_8.xyz.xyz;
  vec4 tmpvar_9;
  tmpvar_9.w = 0.0;
  tmpvar_9.xyz = attr_Normal.xyz;
  vec3 tmpvar_10;
  tmpvar_10 = (boneMatrix_3 * tmpvar_9).xyz;
  vec_Normal_2 = tmpvar_10;
  vec4 tmpvar_11;
  tmpvar_11 = (u_WorldViewProjectionMatrix * position_4);
  gl_Position = tmpvar_11;
  if (bool(u_PointLight)) {
    float tmpvar_12;
    tmpvar_12 = dot (position_4, gl_ObjectPlaneS[0]);
    float tmpvar_13;
    tmpvar_13 = tmpvar_12;
    var_ProjCoord[0].x = tmpvar_13;
    float tmpvar_14;
    tmpvar_14 = dot (position_4, gl_ObjectPlaneT[0]);
    float tmpvar_15;
    tmpvar_15 = tmpvar_14;
    var_ProjCoord[0].y = vec2(tmpvar_15).y;
    float tmpvar_16;
    tmpvar_16 = dot (position_4, gl_ObjectPlaneS[1]);
    float tmpvar_17;
    tmpvar_17 = tmpvar_16;
    var_ProjCoord[1].x = tmpvar_17;
    vec3 tmpvar_18;
    tmpvar_18 = normalize ((u_LightOrigin - position_4.xyz));
    vec3 tmpvar_19;
    tmpvar_19 = tmpvar_18;
    vec_LightDir_1 = tmpvar_19;
  } else {
    vec4 texCoord_20;
    float tmpvar_21;
    tmpvar_21 = dot (position_4, gl_ObjectPlaneS[0]);
    float tmpvar_22;
    tmpvar_22 = tmpvar_21;
    texCoord_20.x = tmpvar_22;
    float tmpvar_23;
    tmpvar_23 = dot (position_4, gl_ObjectPlaneT[0]);
    float tmpvar_24;
    tmpvar_24 = tmpvar_23;
    texCoord_20.y = vec2(tmpvar_24).y;
    float tmpvar_25;
    tmpvar_25 = dot (position_4, gl_ObjectPlaneR[0]);
    float tmpvar_26;
    tmpvar_26 = tmpvar_25;
    texCoord_20.z = vec3(tmpvar_26).z;
    float tmpvar_27;
    tmpvar_27 = dot (position_4, gl_ObjectPlaneQ[0]);
    float tmpvar_28;
    tmpvar_28 = tmpvar_27;
    texCoord_20.w = vec4(tmpvar_28).w;
    vec4 tmpvar_29;
    tmpvar_29 = (gl_TextureMatrix[0] * texCoord_20);
    var_ProjCoord[0] = tmpvar_29;
    float tmpvar_30;
    tmpvar_30 = dot (position_4, gl_ObjectPlaneS[1]);
    float tmpvar_31;
    tmpvar_31 = tmpvar_30;
    var_ProjCoord[1].x = tmpvar_31;
    vec4 tmpvar_32;
    tmpvar_32 = (gl_TextureMatrix[2] * texCoord_20);
    var_ProjCoord[2] = tmpvar_32;
    vec3 tmpvar_33;
    tmpvar_33 = u_LightDir;
    vec_LightDir_1 = tmpvar_33;
  };
  if (bool((u_FaceFlags & 1))) {
    float tmpvar_34;
    tmpvar_34 = 0.8;
    var_LightCos = tmpvar_34;
  } else {
    float tmpvar_35;
    tmpvar_35 = dot (vec_Normal_2, vec_LightDir_1);
    float tmpvar_36;
    tmpvar_36 = clamp (tmpvar_35, -1.0, 1.0);
    float tmpvar_37;
    tmpvar_37 = tmpvar_36;
    var_LightCos = tmpvar_37;
  };
  if (bool((u_FaceFlags & 2))) {
    vec3 chromeright_38;
    vec3 chromeup_39;
    vec3 origin_40;
    vec3 tmpvar_41;
    tmpvar_41 = boneMatrix_3[3].xyz;
    vec3 tmpvar_42;
    tmpvar_42 = normalize ((-(u_ViewOrigin) + tmpvar_41));
    vec3 tmpvar_43;
    tmpvar_43 = tmpvar_42;
    origin_40 = tmpvar_43;
    vec3 tmpvar_44;
    tmpvar_44 = cross (origin_40, -(u_ViewRight));
    vec3 tmpvar_45;
    tmpvar_45 = normalize (tmpvar_44);
    vec3 tmpvar_46;
    tmpvar_46 = tmpvar_45;
    chromeup_39 = tmpvar_46;
    vec3 tmpvar_47;
    tmpvar_47 = cross (origin_40, chromeup_39);
    vec3 tmpvar_48;
    tmpvar_48 = normalize (tmpvar_47);
    vec3 tmpvar_49;
    tmpvar_49 = tmpvar_48;
    chromeright_38 = tmpvar_49;
    vec3 tmpvar_50;
    tmpvar_50 = -(chromeup_39);
    chromeup_39 = tmpvar_50;
    float tmpvar_51;
    tmpvar_51 = dot (vec_Normal_2, chromeright_38);
    float tmpvar_52;
    tmpvar_52 = (((tmpvar_51 + 1.0) * 32.0) * attr_TexCoord0.x);
    var_TexCoord.x = tmpvar_52;
    float tmpvar_53;
    tmpvar_53 = dot (vec_Normal_2, chromeup_39);
    float tmpvar_54;
    tmpvar_54 = (((tmpvar_53 + 1.0) * 32.0) * attr_TexCoord0.y);
    var_TexCoord.y = vec2(tmpvar_54).y;
  } else {
    vec2 tmpvar_55;
    tmpvar_55 = attr_TexCoord0;
    var_TexCoord = tmpvar_55;
  };
}

