#version 130
uniform sampler2D u_ColorMap;
uniform sampler2D u_NormalMap;
uniform sampler2D u_GlossMap;
uniform vec3 u_LightDiffuse;
uniform vec3 u_LightAmbient;
uniform int u_FaceFlags;
uniform float u_GlossExponent;
in vec2 var_TexCoord;
in vec3 var_ViewDir;
in vec3 var_LightDir;
void main ()
{
  vec3 illum_1;
  vec3 specular_2;
  vec4 diffuse_3;
  vec4 tmpvar_4;
  tmpvar_4 = texture (u_ColorMap, var_TexCoord);
  diffuse_3 = tmpvar_4;
  specular_2 = vec3(0.0, 0.0, 0.0);
  if (bool((u_FaceFlags & 4))) {
    illum_1 = vec3(1.0, 1.0, 1.0);
  } else {
    if (bool((u_FaceFlags & 1))) {
      illum_1 = (u_LightAmbient + (u_LightDiffuse * 0.8));
    } else {
      vec3 tmpvar_5;
      tmpvar_5 = normalize(var_LightDir);
      vec3 tmpvar_6;
      tmpvar_6 = normalize((2.0 * (texture (u_NormalMap, var_TexCoord).xyz - 0.5)));
      vec3 I_7;
      I_7 = -(tmpvar_5);
      specular_2 = ((texture (u_GlossMap, var_TexCoord).xyz * u_LightDiffuse) * pow (max (
        dot ((I_7 - (2.0 * (
          dot (tmpvar_6, I_7)
         * tmpvar_6))), normalize(var_ViewDir))
      , 0.0), u_GlossExponent));
      illum_1 = (u_LightAmbient + (u_LightDiffuse * max (
        dot (tmpvar_6, tmpvar_5)
      , 0.0)));
    };
  };
  illum_1 = max (vec3(0.0, 0.0, 0.0), illum_1);
  float tmpvar_8;
  tmpvar_8 = max (illum_1.x, max (illum_1.y, illum_1.z));
  if ((tmpvar_8 > 1.0)) {
    illum_1 = (illum_1 * (1.0/(tmpvar_8)));
  };
  diffuse_3.xyz = (tmpvar_4.xyz * illum_1);
  diffuse_3.xyz = (diffuse_3.xyz + specular_2);
  if ((bool((u_FaceFlags & 64)) && (tmpvar_4.w <= 0.5))) {
    discard;
    return;
  };
  if (bool((u_FaceFlags & 32))) {
    diffuse_3.w = 0.5;
  };
  diffuse_3.xyz = (diffuse_3.xyz * 2.0);
  gl_FragColor = diffuse_3;
}


// inputs: 3, stats: 43 alu 4 tex 6 flow
